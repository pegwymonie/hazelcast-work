apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: grafana
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
    spec:
      affinity: {}
      containers:
      - image: grafana/grafana-oss
        imagePullPolicy: Always
        name: grafana
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        envFrom:
          - configMapRef:
              name: grafana-config
        volumeMounts:
        - mountPath: /etc/grafana/provisioning/datasources/
          name: datasource
        - mountPath: /etc/grafana/provisioning/dashboards/
          name: dashboards
        - mountPath: /etc/dashboards
          name: dashboard-objects
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: grafana-provision-datasource
        name: datasource
      - configMap:
          defaultMode: 420
          name: grafana-provision-dashboard
        name: dashboards
      - configMap:
          defaultMode: 420
          name: grafana-dashboards
        name: dashboard-objects
